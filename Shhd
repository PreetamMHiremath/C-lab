#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX 5  // Maximum size of Stack

int stack[MAX];
int top = -1;

// Function prototypes
void push();
void pop();
void display();
void checkPalindrome();
void overflowUnderflow();

int main() {
    int choice;

    while (1) {
        printf("\n--- STACK MENU ---\n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Check Palindrome\n");
        printf("4. Overflow & Underflow\n");
        printf("5. Display Stack\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: push(); break;
            case 2: pop(); break;
            case 3: checkPalindrome(); break;
            case 4: overflowUnderflow(); break;
            case 5: display(); break;
            case 6: exit(0);
            default: printf("Invalid choice! Try again.\n");
        }
    }
    return 0;
}

// Push operation
void push() {
    int item;
    if (top == MAX - 1) {
        printf("Stack Overflow! Cannot push more elements.\n");
    } else {
        printf("Enter element to push: ");
        scanf("%d", &item);
        stack[++top] = item;
        printf("%d pushed to stack.\n", item);
    }
}

// Pop operation
void pop() {
    if (top == -1) {
        printf("Stack Underflow! No elements to pop.\n");
    } else {
        printf("Popped element: %d\n", stack[top--]);
    }
}

// Display operation
void display() {
    if (top == -1) {
        printf("Stack is empty.\n");
    } else {
        printf("Stack elements (top to bottom): ");
        for (int i = top; i >= 0; i--)
            printf("%d ", stack[i]);
        printf("\n");
    }
}

// Palindrome check using stack
void checkPalindrome() {
    char str[50], rev[50];
    int i, len;

    printf("Enter a string: ");
    scanf("%s", str);
    len = strlen(str);
    top = -1;

    // Push all characters
    for (i = 0; i < len; i++) {
        if (top < MAX - 1)
            stack[++top] = str[i];
        else {
            printf("Stack Overflow while checking palindrome!\n");
            return;
        }
    }

    // Pop to reverse
    for (i = 0; i < len; i++) {
        rev[i] = stack[top--];
    }
    rev[i] = '\0';

    if (strcmp(str, rev) == 0)
        printf("%s is a palindrome.\n", str);
    else
        printf("%s is not a palindrome.\n", str);
}

// Demonstrate overflow and underflow
void overflowUnderflow() {
    int i;
    top = -1;
    printf("\n--- Overflow Demonstration ---\n");
    for (i = 0; i <= MAX; i++)
        push();

    printf("\n--- Underflow Demonstration ---\n");
    top = -1;
    pop();
}
